# =================================================
# Author   :tracyone
# Url      :https://github.com/tracyone/dotfiles
# Email    :tracyone@live.cn
# =================================================

# status bar
if-shell 'tmux -V|grep 1.[1-9]' 'set-option -g status-utf8 on'
if-shell 'uname | grep -qi Linux' 'set-option -g default-shell /usr/bin/zsh'

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left ''
set -g status-right ''
# set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
# set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

bind -r ( switch-client -p
bind -r ) switch-client -n

# resize pane
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# This allows using the mouse to resize panes; note that there is no change in
# mouse cursor when hover over a pane divider as one might expect (everything
# still works though).
##
#
#
if-shell 'tmux -V|grep 2.[1-9]' 'setw -g mouse on' 'setw -g mode-mouse on ; setw -g mouse-resize-pane on ; setw -g mouse-select-pane on ; setw -g mouse-select-window on'



# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Highlight active window
set-window-option -g window-status-current-bg red

# Highlight active pane
set-option -g pane-active-border-fg red

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
# MSYS
if-shell 'uname | grep -qi MSYS_NT' 'bind -t vi-copy y copy-pipe "cat > /dev/clipboard"'
if-shell 'uname | grep -qi MSYS_NT' 'bind ] run "cat /dev/clipboard | tmux load-buffer - ; tmux paste-buffer"'

# os x
#if-shell 'uname | grep -qi Darwin' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'
if-shell 'uname | grep -qi Darwin' 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell 'uname | grep -qi Darwin' 'bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell 'uname | grep -qi Darwin' 'bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'

# Linux
if-shell 'uname | grep -qi Linux' 'bind -t vi-copy y copy-pipe "xclip -sel clip -i"'


# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename


# color
set -g default-terminal "screen-256color"

# + and - now "zoom" in and out of a pane (e.i., temporarily maximize it)
unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind -
bind _ last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

bind-key c-K confirm-before -p "Kill Session #S (y/n)?" "run-shell 'tmux switch-client -l \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'" 
# | and _ are now used for splitting windows into panes
unbind %
bind \ split-window -h
bind - split-window -v

if-shell 'tmux -V|grep 2.[1-9]' 'bind m setw -g mouse off \; display "Mouse OFF!"  ' 'bind m setw -g mode-mouse off \; set -g mouse-select-pane off \; set -g mouse-resize-pane off \; set -g mouse-select-window off \; display "Mouse OFF!" '

if-shell 'tmux -V|grep 2.[1-9]' 'bind M setw -g mouse on \; display "Mouse ON!"  ' 'bind M setw -g mode-mouse on \; set -g mouse-select-pane on \; set -g mouse-resize-pane on \; set -g mouse-select-window on \; display "Mouse ON!" '


set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'

run '~/.tmux/plugins/tpm/tpm'
